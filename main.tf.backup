

resource "google_service_account" "default" {
  account_id   = "my-custom-sa"
  display_name = "Custom SA for VM Instance"
}

resource "google_compute_instance" "default" {
  name         = "my-instance"
  machine_type = "n2-standard-2"
  zone         = "us-central1-a"

  tags = ["foo", "bar"]

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"
      labels = {
        my_label = "value"
      }
    }
  }

  // Local SSD disk
  scratch_disk {
    interface = "NVME"
  }

  network_interface {
    network = "default"

    access_config {
      // Ephemeral public IP
    }
  }

  metadata = {
    foo = "bar"
  }

  metadata_startup_script = "echo hi > /test.txt"

  service_account {
    # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
    email  = google_service_account.default.email
    scopes = ["cloud-platform"]
  }
}

resource "google_compute_instance_group" "webservers" {
  name        = "terraform-webservers"
  description = "Terraform test instance group"
  zone        = "us-central1-a"

  instances = [
    google_compute_instance.default.id,  # Ajustado para corresponder ao recurso definido
  ]

  named_port {
    name = "http"
    port = "8080"
  }

  named_port {
    name = "https"
    port = "8443"
  }

}

resource "google_compute_network_endpoint_group" "neg" {
  name         = "my-lb-neg"
  network      = google_compute_network.default.id
  subnetwork   = google_compute_subnetwork.default.id
  default_port = "90"
  zone         = "us-central1-a"
}

resource "google_compute_network" "default" {
  description                     = "Default network for the project" 
  name                            = "default"
  project                         = "test-uece-18"
}



resource "google_compute_subnetwork" "default" {
  ip_cidr_range              = "10.128.0.0/20"
  name                       = "default"
  network       = google_compute_network.default.id
  # private_ip_google_access   = false -> null
}

resource "google_compute_backend_service" "default" {
  name          = "my-backend-service"
  port_name     = "http"
  protocol      = "HTTP"
  backends {
    group = google_compute_instance_group_manager.default.instance_group
  }
  health_checks = [google_compute_http_health_check.default.id]
  region        = "us-central1"
}

resource "google_compute_http_health_check" "default" {
  name               = "my-http-health-check"
  request_path        = "/"
  check_interval_sec  = 10
  timeout_sec         = 5
  healthy_threshold   = 2
  unhealthy_threshold = 2
}


resource "google_compute_backend_service" "default" {
  name          = "my-backend-service"
  port_name     = "http"
  protocol      = "HTTP"
  backends {
    group = google_compute_instance_group_manager.default.instance_group
  }
  health_checks = [google_compute_http_health_check.default.id]
  region        = "us-central1"
}

resource "google_compute_http_health_check" "default" {
  name               = "my-http-health-check"
  request_path        = "/"
  check_interval_sec  = 10
  timeout_sec         = 5
  healthy_threshold   = 2
  unhealthy_threshold = 2
}
